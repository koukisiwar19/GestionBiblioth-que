/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestbiblio.gestbiblio.models;

import Controller.AdherentJpaController;
import Controller.EnseignantJpaController;
import Controller.exceptions.IllegalOrphanException;
import Controller.exceptions.NonexistentEntityException;
import gestbiblio.gestbiblio.Entité.Adherent;
import gestbiblio.gestbiblio.Entité.Enseignant;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class GestionEnseignant extends javax.swing.JFrame {
 DefaultTableModel model = new DefaultTableModel();
                                    List<Enseignant> enseignants = new ArrayList<>();    
    /**
     * Creates new form GestionEnseignant
     */
    public GestionEnseignant() {
        initComponents();
        fillComboBoxes();
           refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtgrade = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbNom = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ensgList = new javax.swing.JTable();
        btAdd = new javax.swing.JButton();
        btsupp = new javax.swing.JButton();
        btclose = new javax.swing.JButton();
        btedit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gérer Enseignant"));

        jLabel1.setText("Nom et prénom");

        jLabel2.setText("Grade");

        cmbNom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ensgList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nom", "Prenom", "Grade"
            }
        ));
        jScrollPane3.setViewportView(ensgList);

        btAdd.setText("Ajouter");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btsupp.setText("Supprimer");
        btsupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsuppActionPerformed(evt);
            }
        });

        btclose.setText("Annuler");
        btclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcloseActionPerformed(evt);
            }
        });

        btedit.setText("Modifier");
        btedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtgrade)
                            .addComponent(cmbNom, 0, 131, Short.MAX_VALUE))
                        .addGap(82, 82, 82))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btedit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btsupp, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btclose)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdd)
                    .addComponent(btsupp)
                    .addComponent(btclose)
                    .addComponent(btedit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("GestBiblioPU");
            System.out.println(emf.getProperties());
            EnseignantJpaController controler = new EnseignantJpaController(emf);

            int idAdh = adherents.get(cmbNom.getSelectedIndex()).getIdAdh();
            String classe = txtgrade.getText();
            Enseignant ensg = new Enseignant(idAdh,classe);
            ensg.setAdherent(adherents.get(cmbNom.getSelectedIndex()));

            controler.create(ensg);
            refresh();

        } catch (Exception ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btAddActionPerformed

    private void btsuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsuppActionPerformed

        EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
        System.out.println(fact.getProperties());
        EnseignantJpaController controler = new EnseignantJpaController(fact);

        int idadh = enseignants.get( ensgList.getSelectedRow()).getAdherent().getIdAdh();
        System.out.println("enseignant id selected : " +idadh);
        try {
            controler.destroy(idadh);
            List<Enseignant> Listetud =controler.findEnseignantEntities();
            AfficherListDesEtudiant(Listetud);

        } catch (NonexistentEntityException e) {
            e.printStackTrace();

        }catch (Exception e) {
            e.printStackTrace();
        }
        refresh();

        // TODO add your handling code here:
    }//GEN-LAST:event_btsuppActionPerformed

    private void btcloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcloseActionPerformed
        AcceuilAdministrateur frame = new AcceuilAdministrateur ();
        frame.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btcloseActionPerformed

    private void bteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteditActionPerformed
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
        System.out.println(fact.getProperties());
        EnseignantJpaController controler = new EnseignantJpaController(fact);
        List<Enseignant> EnseigList =controler.findEnseignantEntities();
        List<Enseignant> updated_enseignant = new ArrayList<>();
        for(int i = 0;i<ensgList.getModel().getRowCount();i++){

            int idadh = enseignants.get(ensgList.getSelectedRow()).getAdherent().getIdAdh();
            String grade = String.valueOf( ensgList.getModel().getValueAt(i,2) );
            Enseignant ensg = new Enseignant (idadh, grade);
            ensg.setAdherent(adherents.get(cmbNom.getSelectedIndex()));
            updated_enseignant.add(ensg);
        }

        for(Enseignant enseignant : updated_enseignant){
            try {
                controler.edit(enseignant);
            } catch (IllegalOrphanException e) {
                e.printStackTrace();
            } catch (NonexistentEntityException e) {
                e.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            }

            refresh();

        }
    }//GEN-LAST:event_bteditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionEnseignant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionEnseignant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionEnseignant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionEnseignant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionEnseignant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btclose;
    private javax.swing.JButton btedit;
    private javax.swing.JButton btsupp;
    private javax.swing.JComboBox<String> cmbNom;
    private javax.swing.JTable ensgList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txtgrade;
    // End of variables declaration//GEN-END:variables

    private void fillComboBoxes() {
         cmbNom.removeAllItems();
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("GestBiblioPU");
            AdherentJpaController controler = new AdherentJpaController(emf);
        adherents = controler.findAdherentEntities();
       // List<Adherent> adherents = controler.findAdherentEntities();
        for(Adherent adherent : adherents){
                    // cmbAdh.addItem(adherent.getIdAdh() + " - " + adherent.getNom() + adherent.getPrenom());
                    cmbNom.addItem(adherent.getNom() +" "+ adherent.getPrenom());
        }
        cmbNom.updateUI();
        refresh();
    }
                List<Adherent> adherents = new ArrayList<>();

                
 private void AfficherListDesEtudiant(List<Enseignant> enseign) {
            ensgList.removeAll();

            while (model.getRowCount() > 0)
                model.removeRow(0);

            if(model.getColumnCount() == 0){
                model.addColumn("Nom");
                model.addColumn("Prenom");
                model.addColumn("grade");
            }

           for(Enseignant E : enseign){
               model.addRow(new Object[] { E.getAdherent().getNom(), E.getAdherent().getPrenom(),E.getGrade()});
           }
           ensgList.setModel(model);   
    }
        private void refresh(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("GestBiblioPU");
        EnseignantJpaController controler = new EnseignantJpaController(emf);
        enseignants = controler.findEnseignantEntities();
            AfficherListDesEtudiant(enseignants);
       
    }


}
