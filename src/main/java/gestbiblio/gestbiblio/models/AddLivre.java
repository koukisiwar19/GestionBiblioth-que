/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestbiblio.gestbiblio.models;

import Controller.AdherentJpaController;
import Controller.LivreJpaController;
import Controller.exceptions.IllegalOrphanException;
import Controller.exceptions.NonexistentEntityException;
import gestbiblio.gestbiblio.Entit√©.Livre;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


public class AddLivre extends javax.swing.JFrame {
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form AddLivre
     */
    public AddLivre() {
        initComponents();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btClose = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListLivre = new javax.swing.JTable();
        txtTitre = new javax.swing.JTextField();
        txtAuteur = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtIdLivre = new javax.swing.JTextField();
        BtEdit = new javax.swing.JButton();
        Btsupp = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter Livre"));

        jLabel1.setText("Titre");
        jLabel1.setToolTipText("");

        jLabel2.setText("Auteur");

        btClose.setText("Annuler");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        ListLivre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "idLivre", "Nom Livre", "Auteur"
            }
        ));
        jScrollPane2.setViewportView(ListLivre);

        btAdd.setText("Ajouter ");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        jLabel3.setText("id Livre");

        BtEdit.setText("Modifier");
        BtEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtEditActionPerformed(evt);
            }
        });

        Btsupp.setText("Supprimer");
        Btsupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtsuppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTitre)
                            .addComponent(txtAuteur)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAdd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(33, 33, 33)
                        .addComponent(txtIdLivre)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(BtEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(Btsupp, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdLivre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAuteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btClose)
                    .addComponent(btAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtEdit)
                    .addComponent(Btsupp))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        try{
       EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
            System.out.println(fact.getProperties());
       LivreJpaController controler = new LivreJpaController(fact);
     /* if(
              (txtIdLivre.getText().equals(""))
              ||
                (txtTitre.getText().equals("")) 
                || 
                (txtAuteur.getText().equals(""))
                
           ){
            JOptionPane.showMessageDialog(null,"Veuillez renseigner les champs titre,auteur!","Gestion des Biblioth√©que",JOptionPane.WARNING_MESSAGE);
        }
      else
      {*/
   
         int idLivre = Integer.parseInt(txtIdLivre.getText());
        String titre = txtTitre.getText();
        String auteur = txtAuteur.getText();
        Livre liv = new Livre(idLivre,titre,auteur);
    

            controler.create(liv);
            List<Livre> livreList =controler.findLivreEntities();
            AfficherListDesLivre(livreList);
        }catch (Exception ex)
        {
            //System.out.println("erreur");
            ex.printStackTrace();
        }
        refresh();
        
     

    }//GEN-LAST:event_btAddActionPerformed

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        AcceuilAdministrateur frame = new AcceuilAdministrateur();
        frame.setVisible (true);
        dispose (); 
    }//GEN-LAST:event_btCloseActionPerformed

    private void BtEditActionPerformed(java.awt.event.ActionEvent evt) {                                       
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
        System.out.println(fact.getProperties());
        LivreJpaController controler = new LivreJpaController(fact);
        //List<Livre> livreList =controler.findLivreEntities();

        List<Livre> updated_books = new ArrayList<>();
        for(int i = 0;i<ListLivre.getModel().getRowCount();i++){
            int id = Integer.parseInt( String.valueOf( ListLivre.getModel().getValueAt(i,0) ) );
            String title = String.valueOf( ListLivre.getModel().getValueAt(i,1) );
            String author = String.valueOf( ListLivre.getModel().getValueAt(i,2) );
            Livre l = new Livre( id,title,author );
            updated_books.add(l);
        }

        for(Livre livre : updated_books){
            try {
                controler.edit(livre);
            } catch (IllegalOrphanException e) {
                e.printStackTrace();
            } catch (NonexistentEntityException e) {
                e.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            }

            List<Livre> livreList =controler.findLivreEntities();
            AfficherListDesLivre(livreList);
           
        }
 refresh();
    }                                      

    private void BtsuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtEditActionPerformed

        EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
        System.out.println(fact.getProperties());
        LivreJpaController controler = new LivreJpaController(fact);

        int book_id = Integer.parseInt( String.valueOf( ListLivre.getModel().getValueAt(ListLivre.getSelectedRow(),0) ) );
        System.out.println("Book id selected : " +book_id);
        try {
            controler.destroy(book_id);
            List<Livre> livreList =controler.findLivreEntities();
            AfficherListDesLivre(livreList);
        } catch (IllegalOrphanException e) {
            e.printStackTrace();
        } catch (NonexistentEntityException e) {
            e.printStackTrace();
        }
        refresh();
    }//GEN-LAST:event_BtEditActionPerformed
/*
    private void BtsuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtsuppActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtsuppActionPerformed
*/

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddLivre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtEdit;
    private javax.swing.JButton Btsupp;
    private javax.swing.JTable ListLivre;
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAuteur;
    private javax.swing.JTextField txtIdLivre;
    private javax.swing.JTextField txtTitre;
    // End of variables declaration//GEN-END:variables

    private void AfficherListDesLivre(List<Livre> liv) {
            ListLivre.removeAll();

            while (model.getRowCount() > 0)
                model.removeRow(0);

            if(model.getColumnCount() == 0){
                model.addColumn("ID");
                model.addColumn("Titre");
                model.addColumn("Auteur");
            }

           for(Livre L : liv){
               model.addRow(new Object[] { L.getIdLivre(),L.getNomLivre(),L.getAuteur() });
           }
           ListLivre.setModel(model);   
    }
        private void refresh(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("GestBiblioPU");
        LivreJpaController controler = new LivreJpaController(emf);
        AfficherListDesLivre(controler.findLivreEntities());
    }
}
