/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestbiblio.gestbiblio.models;

import Controller.AdherentJpaController;
import Controller.EmpruntJpaController;
import Controller.LivreJpaController;
import Controller.exceptions.IllegalOrphanException;
import Controller.exceptions.NonexistentEntityException;
import gestbiblio.gestbiblio.Entité.Adherent;
import gestbiblio.gestbiblio.Entité.Emprunt;
import gestbiblio.gestbiblio.Entité.EmpruntPK;
import gestbiblio.gestbiblio.Entité.Livre;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class AddEmprunt extends javax.swing.JFrame {
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form AddEmprunt
     */
    public AddEmprunt() {
        initComponents();
        fillComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDateemp = new javax.swing.JTextField();
        txtdateret = new javax.swing.JTextField();
        btadd = new javax.swing.JButton();
        btAnnuler = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lisEmprunt = new javax.swing.JTable();
        btEdit = new javax.swing.JButton();
        btSupp = new javax.swing.JButton();
        cmbAdh = new javax.swing.JComboBox<>();
        cmbLiv = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gérer Emprunt");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gérer Emprunt"));

        jLabel1.setText("Adhérent");

        jLabel2.setText("Livre");

        jLabel3.setText("Date emprunt");

        jLabel4.setText("Date Retour ");

        btadd.setText("Ajouter");
        btadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddActionPerformed(evt);
            }
        });

        btAnnuler.setText("Annuler");
        btAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerActionPerformed(evt);
            }
        });

        lisEmprunt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Adherent", "Livre", "Date Emprunt", "Date retour"
            }
        ));
        jScrollPane2.setViewportView(lisEmprunt);

        btEdit.setText("Modifier");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btSupp.setText("Supprimer");
        btSupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuppActionPerformed(evt);
            }
        });

        cmbAdh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAdh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAdhActionPerformed(evt);
            }
        });

        cmbLiv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDateemp)
                    .addComponent(txtdateret, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(cmbAdh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbLiv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSupp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btadd, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(cmbAdh, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cmbLiv, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDateemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtdateret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btadd)
                    .addComponent(btAnnuler))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEdit)
                    .addComponent(btSupp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnnulerActionPerformed

        AcceuilAdministrateur frame = new AcceuilAdministrateur (); 
frame.setVisible(true);
dispose();

    }//GEN-LAST:event_btAnnulerActionPerformed

    private void btaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddActionPerformed
 try{
       EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
            System.out.println(fact.getProperties());
       EmpruntJpaController controler = new   EmpruntJpaController(fact);

              int idAdh = adherents.get(cmbAdh.getSelectedIndex()).getIdAdh();
              int idLivre = livres.get(cmbLiv.getSelectedIndex()).getIdLivre();
              
              
              java.sql.Date dateemp = Date.valueOf(txtDateemp.getText());
              java.sql.Date dateretour = Date.valueOf(txtdateret.getText());

              EmpruntPK empruntPK = new EmpruntPK(idAdh,idLivre);
              
              Emprunt emprunt = new Emprunt(empruntPK, dateemp, dateretour);
              emprunt.setAdherent1(adherents.get(cmbAdh.getSelectedIndex()));
              emprunt.setLivre(livres.get(cmbLiv.getSelectedIndex()));

              
              controler.create(emprunt);
              refresh();
              //List <Emprunt> listEmprunt = controler.findEmpruntEntities();
              // AfficherListDesEmprunt(listEmprunt);
       } catch (Exception ex)
        {
            //System.out.println("erreur");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btaddActionPerformed

    private void cmbAdhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAdhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAdhActionPerformed

    private void btSuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuppActionPerformed
         EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
        System.out.println(fact.getProperties());
        EmpruntJpaController controler = new EmpruntJpaController(fact);

        int emprunt_idadh = Emprunts.get(lisEmprunt.getSelectedRow()).getAdherent().getIdAdh();
        int emprunt_idLiv = Emprunts.get(lisEmprunt.getSelectedRow()).getLivre().getIdLivre();

        EmpruntPK pk = new EmpruntPK(emprunt_idadh,emprunt_idLiv);
        System.out.println("Emprunt id selected : " +pk);
                System.out.println("emprunt_idadh : " +emprunt_idadh);           
                System.out.println("emprunt_idLiv : " +emprunt_idLiv);

        try {
            controler.destroy(pk);
            List<Emprunt> empruntlist =controler.findEmpruntEntities();
            AfficherListDesEmprunt(empruntlist);
        } catch (IllegalOrphanException e) {
            e.printStackTrace();
        } catch (NonexistentEntityException e) {
            e.printStackTrace();
        }catch (Exception e) {
            e.printStackTrace();
        }
        refresh();
    }//GEN-LAST:event_btSuppActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        // TODO add your handling code here:
           EntityManagerFactory fact = Persistence.createEntityManagerFactory("GestBiblioPU");
        System.out.println(fact.getProperties());
        EmpruntJpaController controler = new EmpruntJpaController(fact);
        List<Emprunt> EmpruntList =controler.findEmpruntEntities();

        List<Emprunt> updated_bEmprunt = new ArrayList<>();
        for(int i = 0;i<lisEmprunt.getModel().getRowCount();i++){
       
        int emprunt_idadh = Emprunts.get(lisEmprunt.getSelectedRow()).getAdherent().getIdAdh();
        int emprunt_idLiv = Emprunts.get(lisEmprunt.getSelectedRow()).getLivre().getIdLivre();

            
        String dateE = String.valueOf( lisEmprunt.getModel().getValueAt(i,2) );
        String dateR = String.valueOf( lisEmprunt.getModel().getValueAt(i,3) );
        
        EmpruntPK pk = new EmpruntPK(emprunt_idadh,emprunt_idLiv);
        Emprunt emprunt = new Emprunt(pk, Date.valueOf(dateE), Date.valueOf(dateR));
        emprunt.setAdherent1(adherents.get(cmbAdh.getSelectedIndex()));
        emprunt.setLivre(livres.get(cmbLiv.getSelectedIndex()));
        updated_bEmprunt.add(emprunt);
        }

        for(Emprunt emprunt : updated_bEmprunt){
            try {
                controler.edit(emprunt);
            } catch (IllegalOrphanException e) {
                e.printStackTrace();
            } catch (NonexistentEntityException e) {
                e.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            }

           refresh();
        }
    }//GEN-LAST:event_btEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEmprunt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEmprunt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEmprunt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEmprunt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEmprunt().setVisible(true);
            }
        });
    }
    
    private void fillComboBoxes(){
        cmbAdh.removeAllItems();
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("GestBiblioPU");
        AdherentJpaController controler = new AdherentJpaController(emf);
        adherents = controler.findAdherentEntities();
       // List<Adherent> adherents = controler.findAdherentEntities();
        for(Adherent adherent : adherents){
                    // cmbAdh.addItem(adherent.getIdAdh() + " - " + adherent.getNom() + adherent.getPrenom());
                    cmbAdh.addItem(adherent.getNom()+" " + adherent.getPrenom());
        }
        cmbAdh.updateUI();
        
        cmbLiv.removeAllItems();
        LivreJpaController cont = new LivreJpaController(emf);
        livres = cont.findLivreEntities();
        //List<Livre> livres = cont.findLivreEntities();
        for(Livre livre : livres){
                    //cmbLiv.addItem(livre.getIdLivre()+ " - " + livre.getNomLivre());
                    cmbLiv.addItem( livre.getNomLivre());
        }
        cmbLiv.updateUI();
        refresh();
    }

    
        List<Adherent> adherents = new ArrayList<>();
        List<Livre> livres = new ArrayList<>();    
        
                List<Emprunt> Emprunts = new ArrayList<>();    

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnnuler;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btSupp;
    private javax.swing.JButton btadd;
    private javax.swing.JComboBox<String> cmbAdh;
    private javax.swing.JComboBox<String> cmbLiv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable lisEmprunt;
    private javax.swing.JTextField txtDateemp;
    private javax.swing.JTextField txtdateret;
    // End of variables declaration//GEN-END:variables
private void AfficherListDesEmprunt(List<Emprunt> emprunts) {
    
            lisEmprunt.removeAll();

            while (model.getRowCount() > 0)
                model.removeRow(0);

            if(model.getColumnCount() == 0){
                model.addColumn("Adherent");
                model.addColumn("Livre");
                model.addColumn("Date Emprunt");
                model.addColumn("Date de Retour");

            }

           for(Emprunt Emp : emprunts){
               model.addRow( new Object[] { Emp.getAdherent().getNom()  +  " "+Emp.getAdherent().getPrenom(),Emp.getLivre().getNomLivre(),Emp.getDateemp(),Emp.getDateretour()} );
           }
           lisEmprunt.setModel(model);   
    }
 private void refresh(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("GestBiblioPU");
        EmpruntJpaController controler = new EmpruntJpaController(emf);
        Emprunts = controler.findEmpruntEntities();
        AfficherListDesEmprunt(Emprunts);
    }
}
